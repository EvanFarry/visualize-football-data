{"remainingRequest":"/Users/evan/Documents/Projects/Vue-js/learn/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/evan/Documents/Projects/Vue-js/learn/src/components/form.vue?vue&type=style&index=0&id=230f5a58&scoped=true&lang=css","dependencies":[{"path":"/Users/evan/Documents/Projects/Vue-js/learn/src/components/form.vue","mtime":1529756105000},{"path":"/Users/evan/Documents/Projects/Vue-js/learn/node_modules/css-loader/index.js","mtime":1529684849000},{"path":"/Users/evan/Documents/Projects/Vue-js/learn/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1521907989000},{"path":"/Users/evan/Documents/Projects/Vue-js/learn/node_modules/postcss-loader/lib/index.js","mtime":499162500000},{"path":"/Users/evan/Documents/Projects/Vue-js/learn/node_modules/cache-loader/dist/cjs.js","mtime":1529684850000},{"path":"/Users/evan/Documents/Projects/Vue-js/learn/node_modules/vue-loader/lib/index.js","mtime":1527860006000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.key {color: blue;}\n.value {color: red;}\n\n",{"version":3,"sources":["form.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2FA;AACA","file":"form.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"\" id=\"form\">\n\n    <!-- UI for API KEY -->\n    <label>Your API Key</label>\n    <input type=\"text\" v-model=\"api_key\">\n    <br>\n\n    <!-- UI for API Request -->\n    <label>api.football-data.org</label>\n    <input type=\"text\" name=\"\" v-model=\"path\">\n\n    <!-- UI drop down for request option -->\n    <select v-model=\"responseContorl\" >\n      <option value=\"minified\" selected=\"selected\">minified</option>\n      <option value=\"full\">full</option>\n    </select>\n\n    <!-- Submit button / send Request -->\n    <button type=\"button\" v-on:click=\"sendRequest\">Send Request</button>\n\n    <!-- toggle between raw and formatted JSON -->\n    <br>\n    <button type=\"button\" v-on:click=\"toggleRaw\" v-if='toggle'>Raw JSON</button>\n    <button type=\"button\" v-on:click=\"toggleRaw\" v-if='!toggle'>Formatted JSON</button>\n\n    <!-- formatted data -->\n    <div v-if='toggle' class=\"\">\n\n      <!-- if payload contains an array of items -->\n      <p v-if='payload.length>1'>Items : {{payload.length}}</p>\n      <div  v-if=\"payload.length>1\">\n        <Item v-for='(nested, index) in payload'\n              v-bind:key='index'\n              :data=\"nested\" :index=\"index\">\n        </Item>\n      </div>\n\n      <!-- if payload is a single item -->\n      <div v-else>\n        <Item :data=\"payload\" />\n      </div>\n    </div>\n\n    <!-- Raw JSON -->\n    <div v-if='!toggle' class=\"\">{{payload}}</div>\n  </div>\n</template>\n\n<script>\n  //import child components\n  import Item from './item.vue'\n\n\n  export default {\n    name: 'Form',\n    data : () => {\n      return {\n        api_key: '3014c2f138f64e7289763f52012ef59b',\n        path: '/v1/competitions/445',\n        responseContorl: 'minified',\n        payload_length: 0,\n        toggle: true,\n        payload: '',\n      }\n    },\n    methods: {\n      sendRequest : function(){\n        this.$http.get('http://localhost:3000/request',{\n            params:{\n              key: this.api_key,\n              path : this.path,\n              responseContorl: this.responseContorl,\n            }\n          }\n        ).then(response => {\n          this.payload = response.body;\n        })\n      },\n      toggleRaw : function(){\n        this.toggle = !this.toggle;\n      }\n    },\n    components : {\n      Item,\n    }\n  }\n\n</script>\n\n<style scoped >\n  .key {color: blue;}\n  .value {color: red;}\n\n</style>\n"]}]}